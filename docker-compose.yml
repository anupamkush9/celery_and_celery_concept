version: '3'

services:

  web:
    build: .
    container_name: django-web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/src
    ports:
      - "8000:8000"
    depends_on:
      - my_redis_cache
    networks:
      - anupam      
    logging:
      driver: awslogs
      options:
          awslogs-region: ap-south-1
          awslogs-group: celery_and_celery_beat_logs
          awslogs-create-group: "true"
          awslogs-stream: "django-web-log-stream"
          # tag: "Dev/{{.Name}}_{{.ID}}"

  my_redis_cache:
    image: redis:latest
    container_name: my_redis_cache
    restart: always
    # command: redis-server --save 20 1 --loglevel warning
    # volumes: 
    #   - my_redis_cache:/data
    networks:
      - anupam
    logging:
      driver: awslogs
      options:
          awslogs-region: ap-south-1
          awslogs-group: celery_and_celery_beat_logs
          awslogs-create-group: "true"
          awslogs-stream: "my_redis_cache-log-stream"
          # tag: "Dev/{{.Name}}_{{.ID}}"

  celery_beat:
    build: .
    container_name: my_celery_beat
    command: celery -A celery_p.celery_app beat -l info
    volumes:
      - .:/src
    depends_on:
      - my_redis_cache
      - web
    networks:
      - anupam      
    logging:
      driver: awslogs
      options:
          awslogs-region: ap-south-1
          awslogs-group: celery_and_celery_beat_logs
          awslogs-create-group: "true"
          awslogs-stream: "my_celery_beat-log-stream"
          # tag: "Dev/{{.Name}}_{{.ID}}"


  celery_api:
    build: .
    container_name: my_celery_worker
    command: celery -A celery_p.celery_app worker -l info -c 4
    volumes:
      - .:/src
    depends_on:
      - my_redis_cache
      - web
    networks:
      - anupam
    logging:
      driver: awslogs
      options:
          awslogs-region: ap-south-1
          awslogs-group: celery_and_celery_beat_logs
          awslogs-create-group: "true"
          awslogs-stream: "my_celery_worker-log-stream"
          # tag: "Dev/{{.Name}}_{{.ID}}"

networks:
  anupam:
    driver: bridge

# https://docs.docker.com/engine/logging/drivers/awslogs/#tag
# reference for AWS CloudWatch Logs ( logging driver )
